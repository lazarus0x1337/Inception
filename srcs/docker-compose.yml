version: '3.8'

services:
  nginx:
    image: "nginx:inception"
    container_name: nginx
    build: ./requirements/nginx/.
    ports:
      - "443:443"
    networks:
      - inceptionNet
    env_file:
      - .env
    restart: always
    depends_on:
      - wordpress
    
  wordpress:
    image: "wordpress:inception"
    container_name: wordpress
    build: ./requirements/wordpress/.
    volumes:
      - v-wordpress:/var/www/html
      - v-wordpress:/var/log/php-fpm.log
    networks:
      - inceptionNet
    env_file:
      - .env
    restart: always
    depends_on:
      - mariadb

  mariadb:
    image: "mariadb:inception"
    container_name: mariadb
    build: ./requirements/mariadb/.
    volumes:
      - v-mariadb:/var/lib/mysql
      - v-mariadb:/var/log/mysql
    networks:
      - inceptionNet
    env_file:
      - .env
    restart: always

  redis:
    image: "redis:inception"
    build: ./requirements/bonus/redis/.
    container_name: redis
    networks:
      - inceptionNet
    restart: always
    
  ftp:
    image: "ftp:inception"
    build: ./requirements/bonus/ftp/.
    container_name: ftp
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    env_file:
      - .env
    volumes:
      - v-wordpress:/ftp-data
    networks:
      - inceptionNet
    restart: always
    depends_on:
      - wordpress
  
  adminer:
    image: "adminer:inception"
    build: ./requirements/bonus/adminer/.
    container_name: adminer
    env_file:
      - .env
    networks:
      - inceptionNet
    restart: always
    depends_on:
      - mariadb

  app:
    image: "app:inception"
    build: ./requirements/bonus/app/.
    container_name: app
    networks:
      - inceptionNet
    restart: always

  portainer:
    image: "portainer:inception"
    build: ./requirements/bonus/portainer/.
    container_name: portainer
    env_file:
      - .env
    volumes:
    - v-portainer:/data
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - inceptionNet
    restart: always

#Custom network
networks:
  inceptionNet:
    driver: bridge

volumes:
  v-wordpress:
  v-mariadb:
  v-portainer:



#https://docs.docker.com/engine/daemon/
#sudo systemctl stop docker
#sudo nano /etc/docker/daemon.json

# {
#  "data-root": "/home/afanidi/data"
# }